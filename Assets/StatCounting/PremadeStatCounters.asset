%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 30c7e74a4b804022aef7c59547c34b5d, type: 3}
  m_Name: PremadeStatCounters
  m_EditorClassIdentifier: 
  PremadeGroups:
  - _name: Sprint 40L
    _gameType: {fileID: 11400000, guid: d1ef566a279ff264c88ee9c93b7c99f7, type: 2}
    _statCounterSos:
    - {fileID: 11400000, guid: 99a1507bdfe942c41a6dd7fe380ea1cb, type: 2}
    - {fileID: 11400000, guid: da01094586ea3ff42b5d0427967e84f5, type: 2}
    - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
    - {fileID: 11400000, guid: 5a65acaebf7418442a6506c2d5647d0d, type: 2}
    - {fileID: 11400000, guid: 4a9886897f755cf4c9143a4f700abdf8, type: 2}
    - {fileID: 11400000, guid: be038ea0a0ad71c4a9a49b55536e061d, type: 2}
    - {fileID: 11400000, guid: a059b8164b4204e44b92ef546184abe2, type: 2}
    - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
    - {fileID: 11400000, guid: 62d14d5b7668c504ba2065b11d6e10b6, type: 2}
    - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
    _statCounters:
    - Name: All clears action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif not message.WasAllClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"ALL CLEAR\"\nend\n\nSetAlignment(\"center\")\nSetColor(\"#ffe44d00\")\nSetText(\"\")\n\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: 1, y: 10}
      Size: {x: 8, y: 2}
      UpdateInterval: 0
    - Name: Back to back action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentBackToBack ==
        0 or not message.WasBtbClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Back to Back x\" .. message.CurrentBackToBack\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 16}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Clear type action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.LinesCleared == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\tlocal output = \"\"\n\tif message.WasSpin then\n\t\toutput = \"Spin
        \"\n\telseif message.WasSpinMini then\n\t\toutput = \"Spin Mini \"\n\tend\n\n\tif
        message.LinesCleared == 1 then\n\t\treturn output .. \"Single\"\n\telseif
        message.LinesCleared == 2 then\n\t\treturn output .. \"Double\"\n\telseif
        message.LinesCleared == 3 then\n\t\treturn output .. \"Triple\"\n\telseif
        message.LinesCleared == 4 then\n\t\treturn output .. \"Quad\"\n\telse\n\t\treturn
        output .. \"Quad+\" .. message.LinesCleared\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 14}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Combo action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentCombo == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Combo \" .. message.CurrentCombo\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 12}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Holds
      Type: 0
      Filename: 
      Script: "function Reset()\n\tHolds = 0\n\treturn \"Holds: 0\"\nend\nfunction
        OnHold(message)\n\tif message.WasSuccessful then\n\t\tHolds = Holds + 1\n\tend\n\treturn
        \"Holds: \" .. Holds\nend\nSetText(Reset())\nSetAlignment(\"left\")\nreturn
        {\n\t[\"HoldUsed\"] = OnHold,\n\t[\"GameStarted\"] = Reset,\n\t[\"GameRestarted\"]
        = Reset\n}"
      Position: {x: 11, y: 2}
      Size: {x: 5, y: 1}
      UpdateInterval: 0
    - Name: Inputs
      Type: 0
      Filename: 
      Script: "function Reset()\n\tInputs = 0\n\treturn \"Inputs: 0\"\nend\nfunction
        OnInputAction(message)\n\tif message.KeyActionType:ToString() == \"KeyDown\"
        then\n\t\tInputs = Inputs + 1\n\tend\n\treturn \"Inputs: \" .. Inputs\nend\nSetText(Reset())\nSetAlignment(\"left\")\nreturn
        {\n\t[\"InputAction\"] = OnInputAction,\n\t[\"GameStarted\"] = Reset,\n\t[\"GameRestarted\"]
        = Reset\n}"
      Position: {x: 11, y: 3}
      Size: {x: 5, y: 1}
      UpdateInterval: 0
    - Name: Lines cleared
      Type: 0
      Filename: 
      Script: "function Reset()\n\tLinesCleared = 0\n\treturn \"Lines cleared: 0\"\nend\nfunction
        OnPiecePlaced(message)\n\tLinesCleared = LinesCleared + message.LinesCleared\n\treturn
        \"Lines cleared: \" .. LinesCleared\nend\nSetText(Reset())\nreturn {\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset,\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 3}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Pieces
      Type: 0
      Filename: 
      Script: "function Reset()\n\tPiecesPlaced = 0\n\treturn \"Pieces: 0\\nPPS:
        0\"\nend\nfunction OnPiecePlaced()\n\tPiecesPlaced = PiecesPlaced + 1\nend\nfunction
        OnUpdated()\n\tlocal pps = Stats.PiecesPerSecond\n\treturn \"Pieces: \" ..
        PiecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\nend\nSetText(Reset())\nreturn
        {\n\t[\"CounterUpdated\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset\n}"
      Position: {x: -9, y: 6}
      Size: {x: 8, y: 3}
      UpdateInterval: 0.1
    - Name: Remaining end condition
      Type: 0
      Filename: 
      Script: "function OnChange(message)\n\tif message.ConditionName == nil or message.ConditionName
        == \"None\" or message.ConditionName == \"\" then\n\t\treturn \"\"\n\tend\n\tlocal
        remaining = message.TotalCount - message.CurrentCount\n\tif remaining < 0
        then remaining = 0 end\n\treturn StatUtility:FormatNumber(remaining, 0)\nend\nSetText(\"\")\nSetAlignment(\"center\")\nSetVisibility(0.4)\nreturn
        {\n\t[\"GameEndConditionChanged\"] = OnChange\n}"
      Position: {x: 3, y: 16}
      Size: {x: 4, y: 4}
      UpdateInterval: 0
    - Name: Stopwatch
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
        \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] = OnUpdated\n}"
      Position: {x: -9, y: 0}
      Size: {x: 8, y: 2}
      UpdateInterval: 0.01
  - _name: Cheese Race 20L
    _gameType: {fileID: 11400000, guid: 2eac9bfd32fcf27439d78c2ced67144e, type: 2}
    _statCounterSos:
    - {fileID: 11400000, guid: 99a1507bdfe942c41a6dd7fe380ea1cb, type: 2}
    - {fileID: 11400000, guid: da01094586ea3ff42b5d0427967e84f5, type: 2}
    - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
    - {fileID: 11400000, guid: 5a65acaebf7418442a6506c2d5647d0d, type: 2}
    - {fileID: 11400000, guid: a059b8164b4204e44b92ef546184abe2, type: 2}
    - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
    - {fileID: 11400000, guid: 62d14d5b7668c504ba2065b11d6e10b6, type: 2}
    - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
    _statCounters:
    - Name: All clears action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif not message.WasAllClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"ALL CLEAR\"\nend\n\nSetAlignment(\"center\")\nSetColor(\"#ffe44d00\")\nSetText(\"\")\n\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: 1, y: 10}
      Size: {x: 8, y: 2}
      UpdateInterval: 0
    - Name: Back to back action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentBackToBack ==
        0 or not message.WasBtbClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Back to Back x\" .. message.CurrentBackToBack\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 16}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Clear type action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.LinesCleared == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\tlocal output = \"\"\n\tif message.WasSpin then\n\t\toutput = \"Spin
        \"\n\telseif message.WasSpinMini then\n\t\toutput = \"Spin Mini \"\n\tend\n\n\tif
        message.LinesCleared == 1 then\n\t\treturn output .. \"Single\"\n\telseif
        message.LinesCleared == 2 then\n\t\treturn output .. \"Double\"\n\telseif
        message.LinesCleared == 3 then\n\t\treturn output .. \"Triple\"\n\telseif
        message.LinesCleared == 4 then\n\t\treturn output .. \"Quad\"\n\telse\n\t\treturn
        output .. \"Quad+\" .. message.LinesCleared\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 14}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Combo action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentCombo == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Combo \" .. message.CurrentCombo\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 12}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Lines cleared
      Type: 0
      Filename: 
      Script: "function Reset()\n\tLinesCleared = 0\n\treturn \"Lines cleared: 0\"\nend\nfunction
        OnPiecePlaced(message)\n\tLinesCleared = LinesCleared + message.LinesCleared\n\treturn
        \"Lines cleared: \" .. LinesCleared\nend\nSetText(Reset())\nreturn {\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset,\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 3}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Pieces
      Type: 0
      Filename: 
      Script: "function Reset()\n\tPiecesPlaced = 0\n\treturn \"Pieces: 0\\nPPS:
        0\"\nend\nfunction OnPiecePlaced()\n\tPiecesPlaced = PiecesPlaced + 1\nend\nfunction
        OnUpdated()\n\tlocal pps = Stats.PiecesPerSecond\n\treturn \"Pieces: \" ..
        PiecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\nend\nSetText(Reset())\nreturn
        {\n\t[\"CounterUpdated\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset\n}"
      Position: {x: -9, y: 6}
      Size: {x: 8, y: 3}
      UpdateInterval: 0.1
    - Name: Remaining end condition
      Type: 0
      Filename: 
      Script: "function OnChange(message)\n\tif message.ConditionName == nil or message.ConditionName
        == \"None\" or message.ConditionName == \"\" then\n\t\treturn \"\"\n\tend\n\tlocal
        remaining = message.TotalCount - message.CurrentCount\n\tif remaining < 0
        then remaining = 0 end\n\treturn StatUtility:FormatNumber(remaining, 0)\nend\nSetText(\"\")\nSetAlignment(\"center\")\nSetVisibility(0.4)\nreturn
        {\n\t[\"GameEndConditionChanged\"] = OnChange\n}"
      Position: {x: 3, y: 16}
      Size: {x: 4, y: 4}
      UpdateInterval: 0
    - Name: Stopwatch
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
        \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] = OnUpdated\n}"
      Position: {x: -9, y: 0}
      Size: {x: 8, y: 2}
      UpdateInterval: 0.01
  - _name: Classic Marathon
    _gameType: {fileID: 11400000, guid: 9e871d44a98d84541bd957a59c36de9e, type: 2}
    _statCounterSos:
    - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
    - {fileID: 11400000, guid: a9fc146114079ad4698de12de2b720a5, type: 2}
    - {fileID: 11400000, guid: a059b8164b4204e44b92ef546184abe2, type: 2}
    - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
    - {fileID: 11400000, guid: 7df7f198474b5174297ea76a062840b6, type: 2}
    - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
    _statCounters:
    - Name: Clear type action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.LinesCleared == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\tlocal output = \"\"\n\tif message.WasSpin then\n\t\toutput = \"Spin
        \"\n\telseif message.WasSpinMini then\n\t\toutput = \"Spin Mini \"\n\tend\n\n\tif
        message.LinesCleared == 1 then\n\t\treturn output .. \"Single\"\n\telseif
        message.LinesCleared == 2 then\n\t\treturn output .. \"Double\"\n\telseif
        message.LinesCleared == 3 then\n\t\treturn output .. \"Triple\"\n\telseif
        message.LinesCleared == 4 then\n\t\treturn output .. \"Quad\"\n\telse\n\t\treturn
        output .. \"Quad+\" .. message.LinesCleared\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 16}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Level
      Type: 0
      Filename: 
      Script: "Name = \"\"\nCurrent = \"\"\nTotal = \"\"\nLevel = \"0\"\nfunction
        OnConditionChange(message)\n\tName = message.ConditionName\n\tif Name ==
        nil or Name == \"None\" or Name == \"\" then\n\t\treturn \"\"\n\tend\n\tCurrent
        = StatUtility:FormatNumber(message.CurrentCount, 0)\n\tTotal = StatUtility:FormatNumber(message.TotalCount,
        0)\n\treturn FormatOutput()\nend\nfunction OnLevelChange(message)\n\tLevel
        = message.Level\n\tif Level == nil or Level == \"None\" or Level == \"\"
        then\n\t\treturn \"\"\n\tend\n\treturn FormatOutput()\nend\nfunction FormatOutput()\n\treturn
        \"Level \" .. Level .. \"\\n\" .. Current .. \"/\" .. Total .. \" \" .. Name
        .. \" to next\"\nend\nSetText(\"\")\nreturn {\n\t[\"LevelUpConditionChanged\"]
        = OnConditionChange,\n\t[\"LevelChanged\"] = OnLevelChange\n}"
      Position: {x: 0, y: -3}
      Size: {x: 10, y: 3}
      UpdateInterval: 0.01
    - Name: Lines cleared
      Type: 0
      Filename: 
      Script: "function Reset()\n\tLinesCleared = 0\n\treturn \"Lines cleared: 0\"\nend\nfunction
        OnPiecePlaced(message)\n\tLinesCleared = LinesCleared + message.LinesCleared\n\treturn
        \"Lines cleared: \" .. LinesCleared\nend\nSetText(Reset())\nreturn {\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset,\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 3}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Pieces
      Type: 0
      Filename: 
      Script: "function Reset()\n\tPiecesPlaced = 0\n\treturn \"Pieces: 0\\nPPS:
        0\"\nend\nfunction OnPiecePlaced()\n\tPiecesPlaced = PiecesPlaced + 1\nend\nfunction
        OnUpdated()\n\tlocal pps = Stats.PiecesPerSecond\n\treturn \"Pieces: \" ..
        PiecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\nend\nSetText(Reset())\nreturn
        {\n\t[\"CounterUpdated\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset\n}"
      Position: {x: -9, y: 6}
      Size: {x: 8, y: 3}
      UpdateInterval: 0.1
    - Name: Score
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\tlocal spp = Stats.Score / Stats.PiecesPlaced\n\treturn
        \"Score: \" .. Stats.Score .. \"\\n\" .. StatUtility:FormatNumber(spp, 0)
        .. \" per piece\"\nend\nSetText(\"Score: 0\\n0 per piece\")\nreturn {\n\t[\"ScoreChanged\"]
        = OnUpdated,\n\t[\"PiecePlaced\"] = OnUpdated\n}"
      Position: {x: -10, y: 10}
      Size: {x: 9, y: 3}
      UpdateInterval: 0
    - Name: Stopwatch
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
        \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] = OnUpdated\n}"
      Position: {x: -9, y: 0}
      Size: {x: 8, y: 2}
      UpdateInterval: 0.01
  - _name: Marathon
    _gameType: {fileID: 11400000, guid: d3eb4377728da054cb82ad5ca5528be8, type: 2}
    _statCounterSos:
    - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
    - {fileID: 11400000, guid: a9fc146114079ad4698de12de2b720a5, type: 2}
    - {fileID: 11400000, guid: a059b8164b4204e44b92ef546184abe2, type: 2}
    - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
    - {fileID: 11400000, guid: 7df7f198474b5174297ea76a062840b6, type: 2}
    - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
    - {fileID: 11400000, guid: 99a1507bdfe942c41a6dd7fe380ea1cb, type: 2}
    - {fileID: 11400000, guid: da01094586ea3ff42b5d0427967e84f5, type: 2}
    - {fileID: 11400000, guid: 5a65acaebf7418442a6506c2d5647d0d, type: 2}
    _statCounters:
    - Name: Clear type action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.LinesCleared == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\tlocal output = \"\"\n\tif message.WasSpin then\n\t\toutput = \"Spin
        \"\n\telseif message.WasSpinMini then\n\t\toutput = \"Spin Mini \"\n\tend\n\n\tif
        message.LinesCleared == 1 then\n\t\treturn output .. \"Single\"\n\telseif
        message.LinesCleared == 2 then\n\t\treturn output .. \"Double\"\n\telseif
        message.LinesCleared == 3 then\n\t\treturn output .. \"Triple\"\n\telseif
        message.LinesCleared == 4 then\n\t\treturn output .. \"Quad\"\n\telse\n\t\treturn
        output .. \"Quad+\" .. message.LinesCleared\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 14}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Level
      Type: 0
      Filename: 
      Script: "Name = \"\"\nCurrent = \"\"\nTotal = \"\"\nLevel = \"0\"\nfunction
        OnConditionChange(message)\n\tName = message.ConditionName\n\tif Name ==
        nil or Name == \"None\" or Name == \"\" then\n\t\treturn \"\"\n\tend\n\tCurrent
        = StatUtility:FormatNumber(message.CurrentCount, 0)\n\tTotal = StatUtility:FormatNumber(message.TotalCount,
        0)\n\treturn FormatOutput()\nend\nfunction OnLevelChange(message)\n\tLevel
        = message.Level\n\tif Level == nil or Level == \"None\" or Level == \"\"
        then\n\t\treturn \"\"\n\tend\n\treturn FormatOutput()\nend\nfunction FormatOutput()\n\treturn
        \"Level \" .. Level .. \"\\n\" .. Current .. \"/\" .. Total .. \" \" .. Name
        .. \" to next\"\nend\nSetText(\"\")\nreturn {\n\t[\"LevelUpConditionChanged\"]
        = OnConditionChange,\n\t[\"LevelChanged\"] = OnLevelChange\n}"
      Position: {x: 0, y: -3}
      Size: {x: 10, y: 3}
      UpdateInterval: 0.01
    - Name: Lines cleared
      Type: 0
      Filename: 
      Script: "function Reset()\n\tLinesCleared = 0\n\treturn \"Lines cleared: 0\"\nend\nfunction
        OnPiecePlaced(message)\n\tLinesCleared = LinesCleared + message.LinesCleared\n\treturn
        \"Lines cleared: \" .. LinesCleared\nend\nSetText(Reset())\nreturn {\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset,\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 3}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Pieces
      Type: 0
      Filename: 
      Script: "function Reset()\n\tPiecesPlaced = 0\n\treturn \"Pieces: 0\\nPPS:
        0\"\nend\nfunction OnPiecePlaced()\n\tPiecesPlaced = PiecesPlaced + 1\nend\nfunction
        OnUpdated()\n\tlocal pps = Stats.PiecesPerSecond\n\treturn \"Pieces: \" ..
        PiecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\nend\nSetText(Reset())\nreturn
        {\n\t[\"CounterUpdated\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset\n}"
      Position: {x: -9, y: 6}
      Size: {x: 8, y: 3}
      UpdateInterval: 0.1
    - Name: Score
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\tlocal spp = Stats.Score / Stats.PiecesPlaced\n\treturn
        \"Score: \" .. Stats.Score .. \"\\n\" .. StatUtility:FormatNumber(spp, 0)
        .. \" per piece\"\nend\nSetText(\"Score: 0\\n0 per piece\")\nreturn {\n\t[\"ScoreChanged\"]
        = OnUpdated,\n\t[\"PiecePlaced\"] = OnUpdated\n}"
      Position: {x: -10, y: 10}
      Size: {x: 9, y: 3}
      UpdateInterval: 0
    - Name: Stopwatch
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
        \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] = OnUpdated\n}"
      Position: {x: -9, y: 0}
      Size: {x: 8, y: 2}
      UpdateInterval: 0.01
    - Name: All clears action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif not message.WasAllClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"ALL CLEAR\"\nend\n\nSetAlignment(\"center\")\nSetColor(\"#ffe44d00\")\nSetText(\"\")\n\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: 1, y: 10}
      Size: {x: 8, y: 2}
      UpdateInterval: 0
    - Name: Back to back action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentBackToBack ==
        0 or not message.WasBtbClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Back to Back x\" .. message.CurrentBackToBack\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 16}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Combo action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentCombo == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Combo \" .. message.CurrentCombo\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 12}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
  - _name: Ultra
    _gameType: {fileID: 11400000, guid: b7f7ff470392d2d4ba48edcd7444df3d, type: 2}
    _statCounterSos:
    - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
    - {fileID: 11400000, guid: a059b8164b4204e44b92ef546184abe2, type: 2}
    - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
    - {fileID: 11400000, guid: 7df7f198474b5174297ea76a062840b6, type: 2}
    - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
    - {fileID: 11400000, guid: 99a1507bdfe942c41a6dd7fe380ea1cb, type: 2}
    - {fileID: 11400000, guid: da01094586ea3ff42b5d0427967e84f5, type: 2}
    - {fileID: 11400000, guid: 5a65acaebf7418442a6506c2d5647d0d, type: 2}
    - {fileID: 11400000, guid: 62d14d5b7668c504ba2065b11d6e10b6, type: 2}
    _statCounters:
    - Name: Clear type action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.LinesCleared == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\tlocal output = \"\"\n\tif message.WasSpin then\n\t\toutput = \"Spin
        \"\n\telseif message.WasSpinMini then\n\t\toutput = \"Spin Mini \"\n\tend\n\n\tif
        message.LinesCleared == 1 then\n\t\treturn output .. \"Single\"\n\telseif
        message.LinesCleared == 2 then\n\t\treturn output .. \"Double\"\n\telseif
        message.LinesCleared == 3 then\n\t\treturn output .. \"Triple\"\n\telseif
        message.LinesCleared == 4 then\n\t\treturn output .. \"Quad\"\n\telse\n\t\treturn
        output .. \"Quad+\" .. message.LinesCleared\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 14}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Lines cleared
      Type: 0
      Filename: 
      Script: "function Reset()\n\tLinesCleared = 0\n\treturn \"Lines cleared: 0\"\nend\nfunction
        OnPiecePlaced(message)\n\tLinesCleared = LinesCleared + message.LinesCleared\n\treturn
        \"Lines cleared: \" .. LinesCleared\nend\nSetText(Reset())\nreturn {\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset,\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 3}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Pieces
      Type: 0
      Filename: 
      Script: "function Reset()\n\tPiecesPlaced = 0\n\treturn \"Pieces: 0\\nPPS:
        0\"\nend\nfunction OnPiecePlaced()\n\tPiecesPlaced = PiecesPlaced + 1\nend\nfunction
        OnUpdated()\n\tlocal pps = Stats.PiecesPerSecond\n\treturn \"Pieces: \" ..
        PiecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\nend\nSetText(Reset())\nreturn
        {\n\t[\"CounterUpdated\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset\n}"
      Position: {x: -9, y: 6}
      Size: {x: 8, y: 3}
      UpdateInterval: 0.1
    - Name: Score
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\tlocal spp = Stats.Score / Stats.PiecesPlaced\n\treturn
        \"Score: \" .. Stats.Score .. \"\\n\" .. StatUtility:FormatNumber(spp, 0)
        .. \" per piece\"\nend\nSetText(\"Score: 0\\n0 per piece\")\nreturn {\n\t[\"ScoreChanged\"]
        = OnUpdated,\n\t[\"PiecePlaced\"] = OnUpdated\n}"
      Position: {x: -10, y: 10}
      Size: {x: 9, y: 3}
      UpdateInterval: 0
    - Name: Stopwatch
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
        \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] = OnUpdated\n}"
      Position: {x: -9, y: 0}
      Size: {x: 8, y: 2}
      UpdateInterval: 0.01
    - Name: All clears action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif not message.WasAllClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"ALL CLEAR\"\nend\n\nSetAlignment(\"center\")\nSetColor(\"#ffe44d00\")\nSetText(\"\")\n\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: 1, y: 10}
      Size: {x: 8, y: 2}
      UpdateInterval: 0
    - Name: Back to back action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentBackToBack ==
        0 or not message.WasBtbClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Back to Back x\" .. message.CurrentBackToBack\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 16}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Combo action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentCombo == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Combo \" .. message.CurrentCombo\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 12}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Remaining end condition
      Type: 0
      Filename: 
      Script: "function OnChange(message)\n\tif message.ConditionName == nil or message.ConditionName
        == \"None\" or message.ConditionName == \"\" then\n\t\treturn \"\"\n\tend\n\tlocal
        remaining = message.TotalCount - message.CurrentCount\n\tif remaining < 0
        then remaining = 0 end\n\treturn StatUtility:FormatNumber(remaining, 0)\nend\nSetText(\"\")\nSetAlignment(\"center\")\nSetVisibility(0.4)\nreturn
        {\n\t[\"GameEndConditionChanged\"] = OnChange\n}"
      Position: {x: 3, y: 16}
      Size: {x: 4, y: 4}
      UpdateInterval: 0
  DefaultGroup:
    _name: Default
    _gameType: {fileID: 0}
    _statCounterSos:
    - {fileID: 11400000, guid: 99a1507bdfe942c41a6dd7fe380ea1cb, type: 2}
    - {fileID: 11400000, guid: da01094586ea3ff42b5d0427967e84f5, type: 2}
    - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
    - {fileID: 11400000, guid: 5a65acaebf7418442a6506c2d5647d0d, type: 2}
    - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
    - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
    _statCounters:
    - Name: All clears action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif not message.WasAllClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"ALL CLEAR\"\nend\n\nSetAlignment(\"center\")\nSetColor(\"#ffe44d00\")\nSetText(\"\")\n\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: 1, y: 10}
      Size: {x: 8, y: 2}
      UpdateInterval: 0
    - Name: Back to back action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentBackToBack ==
        0 or not message.WasBtbClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Back to Back x\" .. message.CurrentBackToBack\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 16}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Clear type action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.LinesCleared == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\tlocal output = \"\"\n\tif message.WasSpin then\n\t\toutput = \"Spin
        \"\n\telseif message.WasSpinMini then\n\t\toutput = \"Spin Mini \"\n\tend\n\n\tif
        message.LinesCleared == 1 then\n\t\treturn output .. \"Single\"\n\telseif
        message.LinesCleared == 2 then\n\t\treturn output .. \"Double\"\n\telseif
        message.LinesCleared == 3 then\n\t\treturn output .. \"Triple\"\n\telseif
        message.LinesCleared == 4 then\n\t\treturn output .. \"Quad\"\n\telse\n\t\treturn
        output .. \"Quad+\" .. message.LinesCleared\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 14}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Combo action text
      Type: 0
      Filename: 
      Script: "function OnPiecePlaced(message)\n\tif message.CurrentCombo == 0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
        2)\n\treturn \"Combo \" .. message.CurrentCombo\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
        {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
      Position: {x: -10, y: 12}
      Size: {x: 9, y: 2}
      UpdateInterval: 0
    - Name: Pieces
      Type: 0
      Filename: 
      Script: "function Reset()\n\tPiecesPlaced = 0\n\treturn \"Pieces: 0\\nPPS:
        0\"\nend\nfunction OnPiecePlaced()\n\tPiecesPlaced = PiecesPlaced + 1\nend\nfunction
        OnUpdated()\n\tlocal pps = Stats.PiecesPerSecond\n\treturn \"Pieces: \" ..
        PiecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\nend\nSetText(Reset())\nreturn
        {\n\t[\"CounterUpdated\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStarted\"]
        = Reset,\n\t[\"GameRestarted\"] = Reset\n}"
      Position: {x: -9, y: 3}
      Size: {x: 8, y: 3}
      UpdateInterval: 0.1
    - Name: Stopwatch
      Type: 0
      Filename: 
      Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
        \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] = OnUpdated\n}"
      Position: {x: -9, y: 0}
      Size: {x: 8, y: 2}
      UpdateInterval: 0.01
