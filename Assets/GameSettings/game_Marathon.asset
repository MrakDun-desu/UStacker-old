%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 36f7ab6fbbd4e8b40a0d398785ed582d, type: 3}
  m_Name: game_Marathon
  m_EditorClassIdentifier: 
  GameType: {fileID: 11400000, guid: d3eb4377728da054cb82ad5ca5528be8, type: 2}
  _settings:
    <General>k__BackingField:
      _nextPieceCount: 5
      _randomizerType: 0
      _customRandomizerName: 
      <AllowedSpins>k__BackingField: 2
      <UseCustomSeed>k__BackingField: 0
      <CustomSeed>k__BackingField: 0
      <CustomRandomizerScript>k__BackingField: 
      <ActiveSeed>k__BackingField: 0
    <Controls>k__BackingField:
      _rotationSystemType: 2
      _customRotationSystem: 
      <Allow180Spins>k__BackingField: 1
      <AllowHardDrop>k__BackingField: 1
      <AllowHold>k__BackingField: 1
      <AllowMoveToWall>k__BackingField: 1
      <AllowInputBuffering>k__BackingField: 1
      <AllowAutomaticPreSpawnRotation>k__BackingField: 1
      <UnlimitedHold>k__BackingField: 0
      <ShowGhostPiece>k__BackingField: 1
      <OverrideHandling>k__BackingField: 0
      <Handling>k__BackingField:
        _delayedAutoShift: 0.125
        _automaticRepeatRate: 0.05
        _dasCutDelay: 0
        _cancelDasDelayWithInput: 1
        _delayDasOn: 0
        _simultaneousDasBehavior: 1
        _softDropFactor: 20
        _softDropDelay: 0
        _minSoftDropGravity: 0
        _maxSoftDropGravity: Infinity
        _zeroGravitySoftDropBase: 0.02
        _doubleDropPreventionInterval: 0
        _diagonalLockBehavior: 0
        _inputBufferingType: 0
        _automaticPreSpawnRotation: 0
      <ActiveRotationSystem>k__BackingField:
        DefaultTable:
          StartState: 0
          FullSpinKicks: []
          ZeroToThree: []
          ZeroToOne: []
          OneToZero: []
          OneToTwo: []
          TwoToOne: []
          TwoToThree: []
          ThreeToTwo: []
          ThreeToZero: []
          ZeroToTwo: []
          TwoToZero: []
          OneToThree: []
          ThreeToOne: []
    <BoardDimensions>k__BackingField:
      _boardWidth: 10
      _boardHeight: 20
      _lethalHeight: 20
      _pieceSpawnHeight: 21
      _blockCutHeight: 40
    <Gravity>k__BackingField:
      _defaultGravity: 0.02
      _defaultLockDelay: 0.5
      _piecePlacementDelay: 0
      _lineClearDelay: 0
      _hardLockAmount: 5
      <LockDelayType>k__BackingField: 1
      <HardLockType>k__BackingField: 0
      <TopoutCondition>k__BackingField: 0
      <AllowClutchClears>k__BackingField: 1
    <Objective>k__BackingField:
      _gameManagerType: 2
      _customGameManager: 
      _garbageGenerationType: 0
      _customGarbageGeneratorName: 
      _endConditionCount: 40
      _garbageHeight: 0
      <MainStat>k__BackingField: 0
      <GameEndCondition>k__BackingField: 0
      <CustomGarbageScript>k__BackingField: 
      <CustomGameManagerScript>k__BackingField: 
      <ToppingOutIsOkay>k__BackingField: 1
      <StartingLevel>k__BackingField: 0
    <Presentation>k__BackingField:
      _title: Marathon
      _countdownInterval: 0.65
      _countdownCount: 3
      _gamePadding: 5
      <DefaultStatCounterGroup>k__BackingField:
        _name: Marathon
        _statCounterSos:
        - {fileID: 11400000, guid: a93c75259ac95fa4c8e35e2570556598, type: 2}
        - {fileID: 11400000, guid: a9fc146114079ad4698de12de2b720a5, type: 2}
        - {fileID: 11400000, guid: a059b8164b4204e44b92ef546184abe2, type: 2}
        - {fileID: 11400000, guid: b8aa3efaa10821544ab1a3937865e458, type: 2}
        - {fileID: 11400000, guid: 7df7f198474b5174297ea76a062840b6, type: 2}
        - {fileID: 11400000, guid: 2077419e4bb765a4d9bc5e3f7bbc20fa, type: 2}
        - {fileID: 11400000, guid: 99a1507bdfe942c41a6dd7fe380ea1cb, type: 2}
        - {fileID: 11400000, guid: da01094586ea3ff42b5d0427967e84f5, type: 2}
        - {fileID: 11400000, guid: 5a65acaebf7418442a6506c2d5647d0d, type: 2}
        _statCounters:
        - Name: Clear type action text
          Type: 0
          Filename: 
          Script: "PieceTypes = {\n\t[\"t\"] = \"T\",\n\t[\"i\"] = \"I\",\n\t[\"o\"]
            = \"O\",\n\t[\"s\"] = \"S\",\n\t[\"z\"] = \"Z\",\n\t[\"l\"] = \"L\",\n\t[\"j\"]
            = \"J\"\n}\n\nClearCounts = {\n\t\"Single\",\n\t\"Double\",\n\t\"Triple\",\n\t\"Quad\",\n\t\"Quint\",\n\t\"Hexad\",\n\t\"Heptad\",\n\t\"Octad\",\n\t\"Nonad\",\n\t\"Decad\"\n}\n\nfunction
            OnPiecePlaced(message)\n\tlocal output = \"\"\n\t\n\tif message.WasSpin
            or message.WasSpinMini then\n\t\toutput = PieceTypes[message.PieceType]\n\tend\n\tif
            output == nil then output = \"\" end\n\tif message.WasSpin then\n\t\toutput
            = output .. \" Spin \"\n\telseif message.WasSpinMini then\n\t\toutput
            = output .. \" Spin Mini \"\n\tend\n\n\tif message.LinesCleared <= 0
            then\n\t\tif output == \"\" then\n\t\t\treturn\n\t\tend\n\t\tSetVisibility(1)\n\t\tAnimateVisibility(0,
            2)\n\t\treturn output\n\tend\n\n\tSetVisibility(1)\n\tAnimateVisibility(0,
            2)\n\tif message.LinesCleared <= #ClearCounts then\n\t\treturn output
            .. ClearCounts[message.LinesCleared]\n\telse\n\t\tlocal overflow = message.LinesCleared
            - #ClearCounts\n\t\treturn output .. ClearCounts[#ClearCounts] .. overflow\n\tend\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
            {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
          Position: {x: -10, y: 13}
          Size: {x: 9, y: 2}
          UpdateInterval: 0
        - Name: Level
          Type: 0
          Filename: 
          Script: "Name = \"\"\nCurrent = \"\"\nTotal = \"\"\nLevel = \"0\"\nfunction
            OnConditionChange(message)\n\tName = message.ConditionName\n\tif Name
            == nil or Name == \"None\" or Name == \"\" then\n\t\treturn \"\"\n\tend\n\tCurrent
            = StatUtility:FormatNumber(message.CurrentCount, 0)\n\tTotal = StatUtility:FormatNumber(message.TotalCount,
            0)\n\treturn FormatOutput()\nend\nfunction OnLevelChange(message)\n\tLevel
            = message.Level\n\tif Level == nil or Level == \"None\" or Level == \"\"
            then\n\t\treturn \"\"\n\tend\n\treturn FormatOutput()\nend\nfunction
            FormatOutput()\n\treturn \"Level \" .. Level .. \"\\n\" .. Current ..
            \"/\" .. Total .. \" \" .. Name .. \" to next\"\nend\nSetText(\"\")\nreturn
            {\n\t[\"LevelUpConditionChanged\"] = OnConditionChange,\n\t[\"LevelChanged\"]
            = OnLevelChange\n}"
          Position: {x: 0, y: -3}
          Size: {x: 10, y: 3}
          UpdateInterval: 0.01
        - Name: Lines cleared
          Type: 0
          Filename: 
          Script: "function Reset(message)\n\tif message.NewState:ToString() == \"Initializing\"
            then\n\t\treturn \"Lines cleared: 0\"\n\tend\nend\nfunction OnPiecePlaced(message)\n\treturn
            \"Lines cleared: \" .. Stats.LinesCleared\nend\nSetText(\"Lines cleared:
            0\")\nreturn {\n\t[\"PiecePlaced\"] = OnPiecePlaced,\n\t[\"GameStateChanged\"]
            = Reset\n}"
          Position: {x: -10, y: 2}
          Size: {x: 9, y: 2}
          UpdateInterval: 0
        - Name: Pieces
          Type: 0
          Filename: 
          Script: "function Reset(message)\n\tif message.NewState:ToString() == \"Initializing\"
            then\n\t\treturn FormatOutput()\n\tend\nend\n\nfunction FormatOutput()\r\n\tlocal
            pps = Stats.PiecesPerSecond\r\n\tlocal piecesPlaced = Stats.PiecesPlaced\r\n\treturn
            \"Pieces: \" .. piecesPlaced .. \"\\nPPS: \" .. StatUtility:FormatNumber(pps)\r\nend\r\nSetText(FormatOutput())\r\nreturn
            {\r\n\t[\"CounterUpdated\"] = FormatOutput,\r\n\t[\"PiecePlaced\"] =
            FormatOutput,\n\t[\"GameStateChanged\"] = Reset\n}"
          Position: {x: -9, y: 4}
          Size: {x: 8, y: 3}
          UpdateInterval: 0.1
        - Name: Score
          Type: 0
          Filename: 
          Script: "function OnUpdated()\n\tlocal spp = Stats.Score / Stats.PiecesPlaced\n\treturn
            \"Score: \" .. Stats.Score .. \"\\n\" .. StatUtility:FormatNumber(spp,
            0) .. \" per piece\"\nend\nSetText(\"Score: 0\\n0 per piece\")\nreturn
            {\n\t[\"ScoreChanged\"] = OnUpdated,\n\t[\"PiecePlaced\"] = OnUpdated\n}"
          Position: {x: -10, y: 7}
          Size: {x: 9, y: 3}
          UpdateInterval: 0
        - Name: Stopwatch
          Type: 0
          Filename: 
          Script: "function OnUpdated()\n\treturn \"Time: \" .. StatUtility:GetFormattedTime()\nend\nSetText(\"Time:
            \" .. StatUtility:FormatTime(0))\nreturn {\n\t[\"CounterUpdated\"] =
            OnUpdated\n}"
          Position: {x: -9, y: 0}
          Size: {x: 8, y: 2}
          UpdateInterval: 0.01
        - Name: All clears action text
          Type: 0
          Filename: 
          Script: "function OnPiecePlaced(message)\n\tif not message.WasAllClear
            then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0, 2)\n\treturn
            \"ALL CLEAR\"\nend\n\nSetAlignment(\"center\")\nSetColor(\"#ffe44d00\")\nSetText(\"\")\n\nreturn
            {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
          Position: {x: 1, y: 10}
          Size: {x: 8, y: 2}
          UpdateInterval: 0
        - Name: Back to back action text
          Type: 0
          Filename: 
          Script: "function OnPiecePlaced(message)\n\tif message.CurrentBackToBack
            == 0 or not message.WasBtbClear then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
            2)\n\treturn \"Back to Back x\" .. message.CurrentBackToBack\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
            {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
          Position: {x: -10, y: 15}
          Size: {x: 9, y: 2}
          UpdateInterval: 0
        - Name: Combo action text
          Type: 0
          Filename: 
          Script: "function OnPiecePlaced(message)\n\tif message.CurrentCombo ==
            0 then\n\t\treturn\n\tend\n\tSetVisibility(1)\n\tAnimateVisibility(0,
            2)\n\treturn \"Combo \" .. message.CurrentCombo\nend\nSetVisibility(0)\nSetText(\"\")\nreturn
            {\n\t[\"PiecePlaced\"] = OnPiecePlaced\n}"
          Position: {x: -10, y: 11}
          Size: {x: 9, y: 2}
          UpdateInterval: 0
